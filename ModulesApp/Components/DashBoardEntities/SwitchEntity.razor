@using ModulesApp.Models.Dasboards
@using System.Text.Json
@using ModulesApp.Models.Dasboards.Entities
@using ModulesApp.Services

@if (EditMode)
{
    <MudPaper Class="pa-3" Style="width:300px;">
        <MudStack StretchItems="StretchItems.All" AlignItems="AlignItems.Stretch" Spacing="1">
            <MudStack Row="true">
                <MudTextField @bind-Value="@Entity.Name" Label="Id" Required=true/>
                <MudIconButton Icon="@Icons.Material.Filled.Delete"
                               Color="Color.Error"
                               OnClick="OnDeleteButtonClick" />
            </MudStack>
            <MudDivider />

            <MudTextField @bind-Value="@Entity.Title" MaxLength="20" Label="Title" />

        </MudStack>
    </MudPaper>
}
else
{
    <MudPaper Class="pa-3" Style="width:150px; height:100px">
        <MudStack Justify="Justify.FlexStart" StretchItems="StretchItems.None" AlignItems="AlignItems.Center"
                  Class="overflow-hidden" Style="width:100%; height:100%" Spacing="2">
            <MudText Typo="Typo.h6">@Entity?.Title</MudText>
            <MudSwitch T="bool" Value="Entity.Value" ValueChanged="SwitchValueChanged" Color="Color.Primary">
                @_state
            </MudSwitch>

        </MudStack>
    </MudPaper>
}

@code
{
    [Parameter, EditorRequired]
    public DbSwitchEntity Entity { get; set; } = default!;
    [Parameter]
    public bool EditMode { get; set; } = false;
    [Parameter]
    public Action<DbDashboardEntity?>? DeleteButtonClick { get; set; }

    [Parameter]
    public ContextService? ServerContextService { get; set; }

    public string _state => Entity.Value ? "on" : "off";

    private void OnDeleteButtonClick()
    {
        DeleteButtonClick?.Invoke(Entity);
    }

    private async Task SwitchValueChanged(bool value)
    {
        Entity.Value = value;
        if (ServerContextService != null)
        {
            await ServerContextService.DashboardEntityUserTriggerAsync(Entity);
        }
    }
}
