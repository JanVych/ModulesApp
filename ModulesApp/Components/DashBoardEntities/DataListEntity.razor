@using ModulesApp.Models.Dasboards
@using System.Text.Json
@using ModulesApp.Models.Dasboards.Entities

@if (EditMode)
{
    <MudPaper Class="pa-3" Style="width:400px;">
        <MudStack StretchItems="StretchItems.All" AlignItems="AlignItems.Stretch" Spacing="1">
            <MudStack Row="true">
                <MudTextField @bind-Value="@Entity.Name" Label="Id" Required=true />
                <MudIconButton Icon="@Icons.Material.Filled.Delete"
                               Color="Color.Error"
                               OnClick="OnDeleteButtonClick" />
            </MudStack>
            <MudDivider />

            <MudTextField @bind-Value="@Entity.Title" MaxLength="20" Label="Title" />
            <MudTable T="DbDataListEntity.TableItem" Items="@Entity.TableData" Bordered="true" Hover="true" Elevation="0" Dense="true">
                <HeaderContent>
                    <MudTh>Column_1</MudTh>
                    <MudTh>Column_2</MudTh>
                    <MudTh></MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>
                        <MudTextField @bind-Value="context.Column1" Margin="Margin.Dense" Variant="Variant.Outlined" MaxLength="12" />
                    </MudTd>
                    <MudTd >
                        <MudTextField @bind-Value="context.Column2" Margin="Margin.Dense" Variant="Variant.Outlined" MaxLength="12" />
                    </MudTd>
                    <MudTd>
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Filled.Delete" Color="Color.Error"
                                       OnClick="(() => Entity.TableData.Remove(context))" />
                    </MudTd>
                </RowTemplate>
            </MudTable>
            <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Primary" OnClick="AddNewRow"/>
            <MudTextField @bind-Value="Entity.Column2Suffix" MaxLength="4" Label="Column_2_Suffix" />
            

        </MudStack>
    </MudPaper>
}
else
{
    <MudPaper Class="pa-3" Style="width:300px;">
        <MudStack Justify="Justify.FlexStart" StretchItems="StretchItems.None" AlignItems="AlignItems.Stretch"
                  Class="overflow-hidden" Style="width:100%; height:100%" Spacing="2">
            <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.Center">
                @* @if (!string.IsNullOrEmpty(Entity.Icon))
                {
                    <MudIcon Icon="@Entity.Icon" Color="Color.Primary" Size="Size.Medium" />
                } *@
                <MudText Typo="Typo.h5" Color="Color.Primary">@Entity.Title</MudText>
            </MudStack>
            <MudTable T="DbDataListEntity.TableItem" Items="@Entity.TableData" Bordered="true" Hover="true" Elevation="0">
                <RowTemplate>
                    <MudTd DataLabel="Label">@context.Column1</MudTd>
                    <MudTd DataLabel="Value">@context.Column2 @Entity.Column2Suffix</MudTd>
                </RowTemplate>
            </MudTable>

        </MudStack>
    </MudPaper>
}

@code
{
    [Parameter, EditorRequired]
    public DbDataListEntity Entity { get; set; } = default!;
    [Parameter]
    public bool EditMode { get; set; } = false;
    [Parameter]
    public Action<DbDashboardEntity?>? DeleteButtonClick { get; set; }

    private void OnDeleteButtonClick()
    {
        DeleteButtonClick?.Invoke(Entity);
    }

    private void AddNewRow()
    {
        Entity.TableData.Add(new DbDataListEntity.TableItem());
    }
}
