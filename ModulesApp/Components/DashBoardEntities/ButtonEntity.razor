@using ModulesApp.Models.Dasboards
@using System.Text.Json
@using ModulesApp.Models.Dasboards.Entities
@using ModulesApp.Services

@if (EditMode)
{
    <MudPaper Class="pa-3" Style="width:300px;">
        <MudStack StretchItems="StretchItems.All" AlignItems="AlignItems.Stretch" Spacing="1">
            <MudStack Row="true">
                <MudTextField @bind-Value="@Entity.Name" Label="Id" Required=true />
                <MudIconButton Icon="@Icons.Material.Filled.Delete"
                               Color="Color.Error"
                               OnClick="OnDeleteButtonClick" />
            </MudStack>
            <MudDivider />

            <MudTextField @bind-Value="@Entity.Title" MaxLength="20" Label="Title" />

        </MudStack>
    </MudPaper>
}
else
{
    <MudButton Variant="Variant.Filled" Style="width: 150px; height: 100px;" Color="Color.Primary"
               Disabled="_disabled" OnClick="OnButtonClick">
        <MudText Typo="Typo.h6">@Entity.Title</MudText>
    </MudButton>
}


@code
{
    [Parameter, EditorRequired]
    public DbButtonEntity Entity { get; set; } = default!;
    [Parameter]
    public bool EditMode { get; set; } = false;
    [Parameter]
    public Action<DbDashboardEntity?>? DeleteButtonClick { get; set; }
    [Parameter]
    public ContextService? ServerContextService { get; set; }

    private bool _disabled = false;

    private void OnDeleteButtonClick()
    {
        DeleteButtonClick?.Invoke(Entity);
    }

    private async Task OnButtonClick()
    {
        if (ServerContextService != null)
        {
            _disabled = true;
            await ServerContextService.DashboardEntityUserTriggerAsync(Entity);
            await Task.Delay(500);
            _disabled = false;
        }
    }
}
