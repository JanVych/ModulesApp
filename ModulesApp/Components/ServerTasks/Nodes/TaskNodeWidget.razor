@using Blazor.Diagrams.Components.Renderers
@using Blazor.Diagrams.Core.Models
@using ModulesApp.Components.ServerTasks.Ports
@using ModulesApp.Interfaces
@using MudBlazor

<div class="node">
    <div class="node-header" style="@GetBackgroundStyle()">
        @Header
    </div>

    <div class="node-content">
        @ChildContent
    </div>

    @foreach (TaskPort port in Node.Ports)
    {
        if (port.Input && port.PositionAlignment == PortPositionAlignment.Center)
        {
            <PortRenderer @key="port" Port="port" Class="diagram-port in middle" Style="@GetPortStyle(port.Data)" />
        }

        else if (port.Input && port.PositionAlignment == PortPositionAlignment.Start)
        {
            <PortRenderer @key="port" Port="port" Class="diagram-port in first" Style="@GetPortStyle(port.Data)" />
        }

        else if (port.Input && port.PositionAlignment == PortPositionAlignment.End)
        {
            <PortRenderer @key="port" Port="port" Class="diagram-port in second" Style="@GetPortStyle(port.Data)" />
        }

        else if (!port.Input && port.PositionAlignment == PortPositionAlignment.Center)
        {
            <PortRenderer @key="port" Port="port" Class="diagram-port out middle" Style="@GetPortStyle(port.Data)" />
        }

        else if (!port.Input && port.PositionAlignment == PortPositionAlignment.Start)
        {
            <PortRenderer @key="port" Port="port" Class="diagram-port out first" Style="@GetPortStyle(port.Data)" />
        }
        else if (!port.Input && port.PositionAlignment == PortPositionAlignment.End)
        {
            <PortRenderer @key="port" Port="port" Class="diagram-port out second" Style="@GetPortStyle(port.Data)" />
        }
    }

    @if (BoolOutputText)
    {
        <div class="output-text true">T</div>
        <div class="output-text false">F</div>
    }
</div>

@code 
{
    [Parameter]
    public TaskNode Node { get; set; } = null!;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public bool BoolOutputText { get; set; } = false;

    [Parameter]
    public string Header { get; set; } = string.Empty;

    [Parameter]
    public string MainColor { get; set; } = "var(--data-display-node-color)";


    private string GetPortStyle(bool dataPort)
    {
        if (dataPort)
        {
            return $"background-color: {MainColor}; border-color: {MainColor};";
        }
        else
        {
            return $"border-color: {MainColor};";
        }
    }

    private string GetBackgroundStyle() => $"background-color: {MainColor};";
}