@using Blazor.Diagrams.Components.Renderers;
@using Blazor.Diagrams.Core.Models
@using ModulesApp.Interfaces
@using MudBlazor

<NodeWidget Node="Node" BoolOutputText="false" Header="@header">

    @if(Node.OperationType == NodeArrayOperationType.ArraySlice)
    {
        <MudNumericField T="long"
                         @bind-Value="Node.LongVal1"
                         Variant="Variant.Outlined"
                         Margin="Margin.Dense"
                         Immediate="true"
                         Label="First index" />
        <MudNumericField T="long"
                         @bind-Value="Node.LongVal2"
                         Variant="Variant.Outlined"
                         Margin="Margin.Dense"
                         Immediate="true"
                         Label="Last index" />
    }
    else if(Node.OperationType == NodeArrayOperationType.ArrayRemoveAt)
    {
        <MudNumericField T="long"
                         @bind-Value="Node.LongVal1"
                         Variant="Variant.Outlined"
                         Margin="Margin.Dense"
                         Immediate="true" 
                         Label="Index"/>
    }

</NodeWidget>

@code 
{
    [Parameter] public ArrayOperationNode Node { get; set; } = null!;

    private string header = string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            header = Node.OperationType.ToLongString();
        }
    }

    protected override void OnInitialized()
    {

        base.OnInitialized();
    }
}