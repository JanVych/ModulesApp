@using ModulesApp.Components.DashBoardEntities
@using ModulesApp.Models.Dasboards
@using ModulesApp.Models.Dasboards.Entities

<MudDialog>
    <TitleContent>
        Dialog Title
    </TitleContent>
    <DialogContent>
        <div class="pa-2">
            <MudStack AlignItems="AlignItems.Center">
                <MudText Typo="Typo.h5">New Entity</MudText>
                <MudSelect T="DashboardEntityType" Value="EntityType" Label="Type" ValueChanged="ChangeNewEntityType">
                    @foreach (DashboardEntityType type in _aviableTypes)
                    {
                        <MudSelectItem Value="type" />
                    }
                </MudSelect>
                @if (Entity is DbDataListEntity dle)
                {
                    <DataListEntity EditMode="true" Entity="@dle" />
                }
                else if (Entity is DbSwitchEntity se)
                {
                    <SwitchEntity EditMode="true" Entity="@se" />
                }
                @* else if(Entity is DbTemperaturesListEntity tle)
                {
                    <TemperaturesListEntity EditMode="true" Entity="@tle" />
                } *@
                else if(Entity is DbButtonEntity be)
                {
                    <ButtonEntity EditMode="true" Entity="@be" />
                }
                else if (Entity is DbValueSetterEntity vse)
                {
                    <ValueSetterEntity EditMode="true" Entity="@vse" />
                }
                else if (Entity is DbLineChartEntity lce)
                {
                    <LineChartEntity EditMode="true" Entity="@lce" />
                }
                else if (Entity is DbKeyValueEntity kve)
                {
                    <KeyValueEntity EditMode="true" Entity="@kve" />
                }
                else if (Entity is DbFrameEntity fe)
                {
                    <FrameEntity EditMode="true" Entity="@fe" DisableActions="true"/>
                }
                else
                {
                    <MudText>Unknown entity type</MudText>
                }
            </MudStack>
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter, EditorRequired]
    private IMudDialogInstance MudDialog { get; set; } = default!;

    public DbDashboardEntity Entity { get; set; } = new DbKeyValueEntity();
    public DashboardEntityType EntityType { get; set; } = DashboardEntityType.KeyValue;

    private List<DashboardEntityType> _aviableTypes = new()
    {
        DashboardEntityType.KeyValue,
        
        DashboardEntityType.Switch,
        DashboardEntityType.Button,
        DashboardEntityType.ValueSetter,
        DashboardEntityType.Frame,
        DashboardEntityType.DataList,
        DashboardEntityType.LineChart,
    };

    private void Submit() => MudDialog.Close(DialogResult.Ok(Entity));

    private void Cancel() => MudDialog.Cancel();

    private void ChangeNewEntityType(DashboardEntityType type)
    {
        EntityType = type;
        Entity = type switch
        {
            DashboardEntityType.DataList => new DbDataListEntity(),
            DashboardEntityType.Switch => new DbSwitchEntity(),
            DashboardEntityType.TemperatureList => new DbTemperaturesListEntity(),
            DashboardEntityType.Button => new DbButtonEntity(),
            DashboardEntityType.ValueSetter => new DbValueSetterEntity(),
            DashboardEntityType.LineChart => new DbLineChartEntity(),
            DashboardEntityType.KeyValue => new DbKeyValueEntity(),
            DashboardEntityType.Frame => new DbFrameEntity(),
            _ => new DbKeyValueEntity()
        };
    }
}

